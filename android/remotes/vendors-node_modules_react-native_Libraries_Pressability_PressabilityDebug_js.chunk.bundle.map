{"version":3,"file":"vendors-node_modules_react-native_Libraries_Pressability_PressabilityDebug_js.chunk.bundle","sources":["webpack://sataccommodation/./node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js","webpack://sataccommodation/./node_modules/react-native/Libraries/Components/View/View.js","webpack://sataccommodation/./node_modules/react-native/Libraries/Pressability/PressabilityDebug.js","webpack://sataccommodation/./node_modules/react-native/Libraries/StyleSheet/Rect.js","webpack://sataccommodation/./node_modules/react-native/Libraries/Text/TextAncestor.js"],"sourcesContent":["                                                                                         \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\n                                                          \nconst ViewNativeComponent                       = NativeComponentRegistry.get       ('RCTView', () => ({\n  uiViewClassName: 'RCTView'\n}));\n                          \n                                                                        \n                                                                 \n \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['hotspotUpdate', 'setPressed']\n});\nexport default ViewNativeComponent;\n                                                           ","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                               \n\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\n                              \n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View            \n                                                                     \n                     \n  = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      tabIndex,\n      ...otherProps\n    }           ,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                         \n\nimport View from '../Components/View/View';\nimport normalizeColor from '../StyleSheet/normalizeColor';\nimport {                 normalizeRect} from '../StyleSheet/Rect';\nimport * as React from 'react';\n\n                         \n                    \n                       \n    \n\n/**\n * Displays a debug overlay to visualize press targets when enabled via the\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\n * for example:\n *\n *   return (\n *     <View>\n *       {children}\n *       {__DEV__ ? (\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\n *       ) : null}\n *     </View>\n *   );\n *\n */\nexport function PressabilityDebugView(props       )             {\n  if (__DEV__) {\n    if (isEnabled()) {\n      const normalizedColor = normalizeColor(props.color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      const baseColor =\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\n      const hitSlop = normalizeRect(props.hitSlop);\n      return (\n        <View\n          pointerEvents=\"none\"\n          style={\n            // eslint-disable-next-line react-native/no-inline-styles\n            {\n              backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\n              borderColor: baseColor.slice(0, -2) + '55', // 85%\n              borderStyle: 'dashed',\n              borderWidth: 1,\n              bottom: -(hitSlop?.bottom ?? 0),\n              left: -(hitSlop?.left ?? 0),\n              position: 'absolute',\n              right: -(hitSlop?.right ?? 0),\n              top: -(hitSlop?.top ?? 0),\n            }\n          }\n        />\n      );\n    }\n  }\n  return null;\n}\n\nlet isDebugEnabled = false;\n\nexport function isEnabled()          {\n  if (__DEV__) {\n    return isDebugEnabled;\n  }\n  return false;\n}\n\nexport function setEnabled(value         )       {\n  if (__DEV__) {\n    isDebugEnabled = value;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n                               \n                   \n                 \n                  \n                \n    \n\n                                       \n\nexport function createSquare(size        )       {\n  return {bottom: size, left: size, right: size, top: size};\n}\n\nexport function normalizeRect(rectOrSize             )        {\n  return typeof rectOrSize === 'number' ? createSquare(rectOrSize) : rectOrSize;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\n/**\n * Whether the current element is the descendant of a <Text> element.\n */\nconst TextAncestorContext                            =\n  React.createContext(false);\nif (__DEV__) {\n  TextAncestorContext.displayName = 'TextAncestorContext';\n}\nmodule.exports = TextAncestorContext;\n"],"names":["Commands","_default","ViewNativeComponent","_NativeComponentRegistry","_codegenNativeCommands","View","_react","forwardedRef","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","id","importantForAccessibility","nativeID","tabIndex","otherProps","hasTextAncestor","_TextAncestor","_accessibilityLabelledBy","_accessibilityState","_accessibilityValue","actualView","_ViewNativeComponent","undefined","module","PressabilityDebugView","isEnabled","setEnabled","props","__DEV__","normalizedColor","_normalizeColor","baseColor","hitSlop","_Rect","_View","isDebugEnabled","value","createSquare","normalizeRect","size","rectOrSize","React","require","TextAncestorContext"],"mappings":";;;;;;;;;;;;;;;;QAWaA;eAAAA;;QAGbC;eAAAA;;;;;6FAbyC;0FACP;AAElC,IAAMC,sBAA4CC,yBAAwB,GAAG,CAAQ,WAAW,IAAO;QACrG,iBAAiB;IACnB;AAKO,IAAMH,WAA2BI,IAAAA,8BAAqB,EAAiB;IAC5E,mBAAmB;QAAC;QAAiB;KAAa;AACpD;IACAH,WAAeC;;;;;;;;;ACdf;;;;;;;;CAQC;;;;;;;;;iFAIwB;wFACO;2EACT;AAIvB;;;;;;CAMC,GACD,IAAMG,qBAGFC,OAAM,UAAU,CAClB,SA4BEC;QA1BEC,qCAAAA,6BACAC,4BAAAA,oBACAC,iCAAAA,yBACAC,iCAAAA,yBACAC,4BAAAA,oBACAC,4BAAAA,oBACaC,kBAAb,cACgBC,qBAAhB,iBACiBC,sBAAjB,kBACiBC,sBAAjB,kBACeC,oBAAf,gBACcC,mBAAd,eACmBC,wBAAnB,oBACaC,kBAAb,cACiBC,sBAAjB,kBACiBC,sBAAjB,kBACiBC,sBAAjB,kBACiBC,sBAAjB,kBACkBC,uBAAlB,mBACAC,mBAAAA,WACAC,YAAAA,IACAC,mCAAAA,2BACAC,kBAAAA,UACAC,kBAAAA,UACGC;QAxBHxB;QACAC;QACAC;QACAC;QACAC;QACAC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAc;QACAC;QACAC;QACAC;QACAC;;IAKF,IAAME,kBAAkB3B,OAAM,UAAU,CAAC4B,qBAAY;IACrD,IAAMC,2BACJf,CAAAA,2BAAAA,qCAAAA,eAAgB,KAAK,CAAC,gBAAeV;IAEvC,IAAI0B;IACJ,IACExB,sBAAsB,QACtBE,YAAY,QACZC,eAAe,QACfC,gBAAgB,QAChBC,gBAAgB,QAChBK,gBAAgB,MAChB;QACAc,sBAAsB;YACpB,MAAMtB,aAAYF,+BAAAA,yCAAAA,mBAAoB,IAAI;YAC1C,SAASG,gBAAeH,+BAAAA,yCAAAA,mBAAoB,OAAO;YACnD,UAAUI,iBAAgBJ,+BAAAA,yCAAAA,mBAAoB,QAAQ;YACtD,UAAUK,iBAAgBL,+BAAAA,yCAAAA,mBAAoB,QAAQ;YACtD,UAAUU,iBAAgBV,+BAAAA,yCAAAA,mBAAoB,QAAQ;QACxD;IACF;IACA,IAAIyB;IACJ,IACExB,sBAAsB,QACtBU,gBAAgB,QAChBC,gBAAgB,QAChBC,gBAAgB,QAChBC,iBAAiB,MACjB;QACAW,sBAAsB;YACpB,KAAKd,iBAAgBV,+BAAAA,yCAAAA,mBAAoB,GAAG;YAC5C,KAAKW,iBAAgBX,+BAAAA,yCAAAA,mBAAoB,GAAG;YAC5C,KAAKY,iBAAgBZ,+BAAAA,yCAAAA,mBAAoB,GAAG;YAC5C,MAAMa,kBAAiBb,+BAAAA,yCAAAA,mBAAoB,IAAI;QACjD;IACF;IAEA,IAAMyB,2BACJ,qBAACC,4BAAmB,8CACdP;QACJ,yBACEX,aAAa,QAAQ,SAASA,YAAYV;QAE5C,oBAAoBQ,aAAaV;QACjC,WAAWsB,aAAaS,YAAY,CAACT,WAAWJ;QAChD,oBAAoBS;QACpB,6BAA6BlB,cAAcV;QAC3C,yBAAyB2B;QACzB,oBAAoBE;QACpB,2BACEnB,eAAe,OACX,wBACAW;QAEN,UAAUD,MAAME;QAChB,KAAKvB;;IAIT,IAAI0B,iBAAiB;QACnB,qBACE,qBAACC,qBAAY,CAAC,QAAQ;YAAC,OAAO;sBAC3BI;;IAGP;IAEA,OAAOA;AACT;AAGFjC,KAAK,WAAW,GAAG;AAEnBoC,cAAc,GAAGpC;;;;;;;;;ACpIjB;;;;;;;;CAQC;;;;;;;;;;QA6BeqC;eAAAA;;QAoCAC;eAAAA;;QAOAC;eAAAA;;;;;;yEApEC;mFACU;gCACkB;2EACtB;AAsBhB,SAASF,sBAAsBG,KAAK;IACzC,IAAIC,IAAOA,EAAE;QACX,IAAIH,aAAa;YACf,IAAMI,kBAAkBC,IAAAA,uBAAc,EAACH,MAAM,KAAK;YAClD,IAAI,OAAOE,oBAAoB,UAAU;gBACvC,OAAO;YACT;YACA,IAAME,YACJ,MAAOF,CAAAA,mBAAmB,GAAG,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;YACxD,IAAMG,UAAUC,IAAAA,mBAAa,EAACN,MAAM,OAAO;YAC3C,qBACE,qBAACO,aAAI;gBACH,eAAc;gBACd,OACE,yDAAyD;gBACzD;oBACE,iBAAiBH,UAAU,KAAK,CAAC,GAAG,CAAC,KAAK;oBAC1C,aAAaA,UAAU,KAAK,CAAC,GAAG,CAAC,KAAK;oBACtC,aAAa;oBACb,aAAa;oBACb,QAAQ,CAAEC,CAAAA,CAAAA,oBAAAA,8BAAAA,QAAS,MAAM,KAAI;oBAC7B,MAAM,CAAEA,CAAAA,CAAAA,oBAAAA,8BAAAA,QAAS,IAAI,KAAI;oBACzB,UAAU;oBACV,OAAO,CAAEA,CAAAA,CAAAA,oBAAAA,8BAAAA,QAAS,KAAK,KAAI;oBAC3B,KAAK,CAAEA,CAAAA,CAAAA,oBAAAA,8BAAAA,QAAS,GAAG,KAAI;gBACzB;;QAIR;IACF;IACA,OAAO;AACT;AAEA,IAAIG,iBAAiB;AAEd,SAASV;IACd,IAAIG,IAAOA,EAAE;QACX,OAAOO;IACT;IACA,OAAO;AACT;AAEO,SAAST,WAAWU,KAAK;IAC9B,IAAIR,IAAOA,EAAE;QACXO,iBAAiBC;IACnB;AACF;;;;;;;;;ACpFA;;;;;;;;CAQC;;;;;;;;;;QAWeC;eAAAA;;QAIAC;eAAAA;;;AAJT,SAASD,aAAaE,IAAI;IAC/B,OAAO;QAAC,QAAQA;QAAM,MAAMA;QAAM,OAAOA;QAAM,KAAKA;IAAI;AAC1D;AAEO,SAASD,cAAcE,UAAU;IACtC,OAAO,OAAOA,eAAe,WAAWH,aAAaG,cAAcA;AACrE;;;;;;;;;;ACzBA;;;;;;;;CAQC,GAEY;AAEb,IAAMC,QAAQC,mBAAOA,CAAC,+DAAO;AAE7B;;CAEC,GACD,IAAMC,sBACJF,MAAM,aAAa,CAAC;AACtB,IAAIb,IAAOA,EAAE;IACXe,oBAAoB,WAAW,GAAG;AACpC;AACApB,cAAc,GAAGoB"}