(self["webpackChunksataccommodation"] = self["webpackChunksataccommodation"] || []).push([["node_modules_react-native_Libraries_NativeModules_specs_NativeSourceCode_js-node_modules_reac-bf15c3"], {
"./node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js": 
/*!*************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/NativeModules/specs/NativeSourceCode.js ***!
  \*************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _export_star = __webpack_require__(/*! @swc/helpers/_/_export_star */ "./node_modules/@swc/helpers/cjs/_export_star.cjs");
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _NativeSourceCode = /*#__PURE__*/ _interop_require_default._(_export_star._(__webpack_require__(/*! ../../../src/private/specs/modules/NativeSourceCode */ "./node_modules/react-native/src/private/specs/modules/NativeSourceCode.js"), exports));
var _default = _NativeSourceCode.default;


}),
"./node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js": 
/*!***********************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js ***!
  \***********************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var createReactNativeComponentClass = (__webpack_require__(/*! ../Renderer/shims/createReactNativeComponentClass */ "./node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js")/* ["default"] */["default"]);
var getNativeComponentAttributes = __webpack_require__(/*! ./getNativeComponentAttributes */ "./node_modules/react-native/Libraries/ReactNative/getNativeComponentAttributes.js");
var requireNativeComponent = (uiViewClassName)=>createReactNativeComponentClass(uiViewClassName, ()=>getNativeComponentAttributes(uiViewClassName));
var _default = requireNativeComponent;


}),
"./node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js": 
/*!*********************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js ***!
  \*********************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _requireNativeComponent = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../Libraries/ReactNative/requireNativeComponent */ "./node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js"));
var _UIManager = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../ReactNative/UIManager */ "./node_modules/react-native/Libraries/ReactNative/UIManager.js"));
function codegenNativeComponent(componentName, options) {
    if (__webpack_require__.g.RN$Bridgeless === true && true) {
        console.warn(`Codegen didn't run for ${componentName}. This will be an error in the future. Make sure you are using @react-native/babel-preset when building your JavaScript code.`);
    }
    var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;
    if (options != null && options.paperComponentNameDeprecated != null) {
        if (_UIManager.default.hasViewManagerConfig(componentName)) {
            componentNameInUse = componentName;
        } else if (options.paperComponentNameDeprecated != null && _UIManager.default.hasViewManagerConfig(options.paperComponentNameDeprecated)) {
            componentNameInUse = options.paperComponentNameDeprecated;
        } else {
            throw new Error(`Failed to find native component for either ${componentName} or ${options.paperComponentNameDeprecated ?? '(unknown)'}`);
        }
    }
    return (0, _requireNativeComponent.default)(componentNameInUse);
}
var _default = codegenNativeComponent;


}),
"./node_modules/react-native/src/private/specs/modules/NativeSourceCode.js": 
/*!*********************************************************************************!*\
  !*** ./node_modules/react-native/src/private/specs/modules/NativeSourceCode.js ***!
  \*********************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs");
var _TurboModuleRegistry = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ../../../../Libraries/TurboModule/TurboModuleRegistry */ "./node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js"));
var NativeModule = _TurboModuleRegistry.getEnforcing('SourceCode');
var constants = null;
var NativeSourceCode = {
    getConstants () {
        if (constants == null) {
            constants = NativeModule.getConstants();
        }
        return constants;
    }
};
var _default = NativeSourceCode;


}),
"./node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js": 
/*!***********************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js ***!
  \***********************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
"use strict";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @noformat
 * @nolint
 *       strict-local
 * @generated SignedSource<<52163887de05f1cff05388145cf85b3b>>
 */ 
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _ReactNativePrivateInterface = __webpack_require__(/*! react-native/Libraries/ReactPrivate/ReactNativePrivateInterface */ "webpack/sharing/consume/default/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface/react-native/Libraries/ReactPrivate/ReactNativePrivateInterface");
var register = _ReactNativePrivateInterface.ReactNativeViewConfigRegistry.register;
/**
 * Creates a renderable ReactNative host component.
 * Use this method for view configs that are loaded from UIManager.
 * Use createReactNativeComponentClass() for view configs defined within JavaScript.
 *
 * @param {string} config iOS View configuration.
 * @private
 */ var createReactNativeComponentClass = function(name, callback) {
    return register(name, callback);
};
var _default = createReactNativeComponentClass;


}),

}]);//# sourceMappingURL=node_modules_react-native_Libraries_NativeModules_specs_NativeSourceCode_js-node_modules_reac-bf15c3.chunk.bundle.map?platform=android