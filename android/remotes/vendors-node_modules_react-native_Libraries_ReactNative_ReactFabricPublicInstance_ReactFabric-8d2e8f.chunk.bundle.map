{"version":3,"file":"vendors-node_modules_react-native_Libraries_ReactNative_ReactFabricPublicInstance_ReactFabric-8d2e8f.chunk.bundle","sources":["webpack://sataccommodation/./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricHostComponent.js","webpack://sataccommodation/./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance.js","webpack://sataccommodation/./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyCharacterData.js","webpack://sataccommodation/./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyText.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n             \n               \n                 \n                         \n                                   \n                                 \n                           \n             \n                                               \n\nimport TextInputState from '../../Components/TextInput/TextInputState';\nimport {getNodeFromInternalInstanceHandle} from '../../ReactNative/RendererProxy';\nimport {getFabricUIManager} from '../FabricUIManager';\nimport {create} from './ReactNativeAttributePayload';\nimport warnForStyleProps from './warnForStyleProps';\nimport nullthrows from 'nullthrows';\n\nconst {\n  measure: fabricMeasure,\n  measureInWindow: fabricMeasureInWindow,\n  measureLayout: fabricMeasureLayout,\n  getBoundingClientRect: fabricGetBoundingClientRect,\n  setNativeProps,\n} = nullthrows(getFabricUIManager());\n\nconst noop = () => {};\n\n/**\n * This is used for refs on host components.\n */\nexport default class ReactFabricHostComponent                           {\n  // These need to be accessible from `ReactFabricPublicInstanceUtils`.\n  __nativeTag        ;\n  __internalInstanceHandle                        ;\n\n  _viewConfig            ;\n\n  constructor(\n    tag        ,\n    viewConfig            ,\n    internalInstanceHandle                        ,\n  ) {\n    this.__nativeTag = tag;\n    this._viewConfig = viewConfig;\n    this.__internalInstanceHandle = internalInstanceHandle;\n  }\n\n  blur() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback                          ) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasure(node, callback);\n    }\n  }\n\n  measureInWindow(callback                                  ) {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      fabricMeasureInWindow(node, callback);\n    }\n  }\n\n  measureLayout(\n    relativeToNativeNode                       ,\n    onSuccess                                ,\n    onFail              /* currently unused */,\n  ) {\n    if (\n      typeof relativeToNativeNode === 'number' ||\n      !(relativeToNativeNode instanceof ReactFabricHostComponent)\n    ) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    const toStateNode = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    const fromStateNode = getNodeFromInternalInstanceHandle(\n      relativeToNativeNode.__internalInstanceHandle,\n    );\n\n    if (toStateNode != null && fromStateNode != null) {\n      fabricMeasureLayout(\n        toStateNode,\n        fromStateNode,\n        onFail != null ? onFail : noop,\n        onSuccess != null ? onSuccess : noop,\n      );\n    }\n  }\n\n  unstable_getBoundingClientRect()          {\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null) {\n      const rect = fabricGetBoundingClientRect(node, true);\n\n      if (rect) {\n        return new DOMRect(rect[0], rect[1], rect[2], rect[3]);\n      }\n    }\n\n    // Empty rect if any of the above failed\n    return new DOMRect(0, 0, 0, 0);\n  }\n\n  setNativeProps(nativeProps       )       {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this._viewConfig.validAttributes);\n    }\n    const updatePayload = create(nativeProps, this._viewConfig.validAttributes);\n\n    const node = getNodeFromInternalInstanceHandle(\n      this.__internalInstanceHandle,\n    );\n    if (node != null && updatePayload != null) {\n      setNativeProps(node, updatePayload);\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n/**\n * This module is meant to be used by the React renderers to create public\n * instances and get some data from them (like their instance handle / fiber).\n */\n\n                                                                                                \n                                                                                    \n                                                                         \n             \n                         \n       \n             \n                                               \n                                                                       \n\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet PublicInstanceClass \n                                   \n                             ;\nlet ReadOnlyTextClass                     ;\n\n// Lazy loaded to avoid evaluating the module when using the legacy renderer.\nlet RendererProxy                ;\n\nexport function createPublicInstance(\n  tag        ,\n  viewConfig            ,\n  internalInstanceHandle                        ,\n)                                                {\n  if (PublicInstanceClass == null) {\n    // We don't use inline requires in react-native, so this forces lazy loading\n    // the right module to avoid eagerly loading both.\n    if (ReactNativeFeatureFlags.enableAccessToHostTreeInFabric()) {\n      PublicInstanceClass =\n        require('../../../src/private/webapis/dom/nodes/ReactNativeElement').default;\n    } else {\n      PublicInstanceClass = require('./ReactFabricHostComponent').default;\n    }\n  }\n\n  return new PublicInstanceClass(tag, viewConfig, internalInstanceHandle);\n}\n\nexport function createPublicTextInstance(\n  internalInstanceHandle                        ,\n)               {\n  if (ReadOnlyTextClass == null) {\n    ReadOnlyTextClass =\n      require('../../../src/private/webapis/dom/nodes/ReadOnlyText').default;\n  }\n\n  return new ReadOnlyTextClass(internalInstanceHandle);\n}\n\nexport function getNativeTagFromPublicInstance(\n  publicInstance                                               ,\n)         {\n  return publicInstance.__nativeTag;\n}\n\nexport function getNodeFromPublicInstance(\n  publicInstance                                               ,\n)        {\n  // Avoid loading ReactFabric if using an instance from the legacy renderer.\n  if (publicInstance.__internalInstanceHandle == null) {\n    return null;\n  }\n\n  if (RendererProxy == null) {\n    RendererProxy = require('../../ReactNative/RendererProxy');\n  }\n  return RendererProxy.getNodeFromInternalInstanceHandle(\n    publicInstance.__internalInstanceHandle,\n  );\n}\n\nexport function getInternalInstanceHandleFromPublicInstance(\n  publicInstance                                               ,\n)                         {\n  // TODO(T174762768): Remove this once OSS versions of renderers will be synced.\n  // $FlowExpectedError[prop-missing] Keeping this for backwards-compatibility with the renderers versions in open source.\n  if (publicInstance._internalInstanceHandle != null) {\n    // $FlowExpectedError[incompatible-return] Keeping this for backwards-compatibility with the renderers versions in open source.\n    return publicInstance._internalInstanceHandle;\n  }\n\n  return publicInstance.__internalInstanceHandle;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\n                                                     \n\nimport ReadOnlyNode, {getShadowNode} from './ReadOnlyNode';\nimport NativeDOM from './specs/NativeDOM';\nimport {getElementSibling} from './utilities/Traversal';\n\nexport default class ReadOnlyCharacterData extends ReadOnlyNode {\n  get nextElementSibling()                         {\n    return getElementSibling(this, 'next');\n  }\n\n  get previousElementSibling()                         {\n    return getElementSibling(this, 'previous');\n  }\n\n  get data()         {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode != null) {\n      return NativeDOM.getTextContent(shadowNode);\n    }\n\n    return '';\n  }\n\n  get length()         {\n    return this.data.length;\n  }\n\n  /**\n   * @override\n   */\n  get textContent()                {\n    return this.data;\n  }\n\n  /**\n   * @override\n   */\n  get nodeValue()         {\n    return this.data;\n  }\n\n  substringData(offset        , count        )         {\n    const data = this.data;\n    if (offset < 0) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is negative.`,\n      );\n    }\n    if (offset > data.length) {\n      throw new TypeError(\n        `Failed to execute 'substringData' on 'CharacterData': The offset ${offset} is greater than the node's length (${data.length}).`,\n      );\n    }\n    let adjustedCount = count < 0 || count > data.length ? data.length : count;\n    return data.slice(offset, offset + adjustedCount);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport ReadOnlyCharacterData from './ReadOnlyCharacterData';\nimport ReadOnlyNode from './ReadOnlyNode';\n\nexport default class ReadOnlyText extends ReadOnlyCharacterData {\n  /**\n   * @override\n   */\n  get nodeName()         {\n    return '#text';\n  }\n\n  /**\n   * @override\n   */\n  get nodeType()         {\n    return ReadOnlyNode.TEXT_NODE;\n  }\n}\n"],"names":["ReactFabricHostComponent","_nullthrows1","_FabricUIManager","fabricMeasure","fabricMeasureInWindow","fabricMeasureLayout","fabricGetBoundingClientRect","setNativeProps","noop","tag","viewConfig","internalInstanceHandle","blur","_TextInputState","focus","measure","callback","node","_RendererProxy","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","__DEV__","console","toStateNode","fromStateNode","unstable_getBoundingClientRect","rect","DOMRect","setNativeProps1","nativeProps","_warnForStyleProps","updatePayload","_ReactNativeAttributePayload","createPublicInstance","createPublicTextInstance","getInternalInstanceHandleFromPublicInstance","getNativeTagFromPublicInstance","getNodeFromPublicInstance","PublicInstanceClass","ReadOnlyTextClass","RendererProxy","_ReactNativeFeatureFlags","require","publicInstance","ReadOnlyCharacterData","_Traversal","shadowNode","_ReadOnlyNode","_NativeDOM","substringData","offset","count","data","TypeError","adjustedCount","ReadOnlyText","_ReadOnlyCharacterData"],"mappings":"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"}