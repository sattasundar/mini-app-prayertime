(self["webpackChunksataccommodation"] = self["webpackChunksataccommodation"] || []).push([["vendors-node_modules_react-native_src_private_webapis_dom_nodes_ReactNativeElement_js"], {
"./node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js": 
/*!*****************************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js ***!
  \*****************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get Commands () {
        return Commands;
    },
    get __INTERNAL_VIEW_CONFIG () {
        return __INTERNAL_VIEW_CONFIG;
    },
    get default () {
        return _default;
    }
});
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs");
var _NativeComponentRegistry = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ../../NativeComponent/NativeComponentRegistry */ "./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js"));
var _codegenNativeCommands = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../Utilities/codegenNativeCommands */ "./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js"));
var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: [
        'focus',
        'blur',
        'setTextAndSelection'
    ]
});
var __INTERNAL_VIEW_CONFIG = {
    uiViewClassName: 'AndroidTextInput',
    bubblingEventTypes: {
        topBlur: {
            phasedRegistrationNames: {
                bubbled: 'onBlur',
                captured: 'onBlurCapture'
            }
        },
        topEndEditing: {
            phasedRegistrationNames: {
                bubbled: 'onEndEditing',
                captured: 'onEndEditingCapture'
            }
        },
        topFocus: {
            phasedRegistrationNames: {
                bubbled: 'onFocus',
                captured: 'onFocusCapture'
            }
        },
        topKeyPress: {
            phasedRegistrationNames: {
                bubbled: 'onKeyPress',
                captured: 'onKeyPressCapture'
            }
        },
        topSubmitEditing: {
            phasedRegistrationNames: {
                bubbled: 'onSubmitEditing',
                captured: 'onSubmitEditingCapture'
            }
        }
    },
    directEventTypes: {
        topScroll: {
            registrationName: 'onScroll'
        }
    },
    validAttributes: {
        maxFontSizeMultiplier: true,
        adjustsFontSizeToFit: true,
        minimumFontScale: true,
        autoFocus: true,
        placeholder: true,
        inlineImagePadding: true,
        contextMenuHidden: true,
        textShadowColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        maxLength: true,
        selectTextOnFocus: true,
        textShadowRadius: true,
        underlineColorAndroid: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        textDecorationLine: true,
        submitBehavior: true,
        textAlignVertical: true,
        fontStyle: true,
        textShadowOffset: true,
        selectionColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        selectionHandleColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        placeholderTextColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        importantForAutofill: true,
        lineHeight: true,
        textTransform: true,
        returnKeyType: true,
        keyboardType: true,
        multiline: true,
        color: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        autoComplete: true,
        numberOfLines: true,
        letterSpacing: true,
        returnKeyLabel: true,
        fontSize: true,
        onKeyPress: true,
        cursorColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        text: true,
        showSoftInputOnFocus: true,
        textAlign: true,
        autoCapitalize: true,
        autoCorrect: true,
        caretHidden: true,
        secureTextEntry: true,
        textBreakStrategy: true,
        onScroll: true,
        onContentSizeChange: true,
        disableFullscreenUI: true,
        includeFontPadding: true,
        fontWeight: true,
        fontFamily: true,
        allowFontScaling: true,
        onSelectionChange: true,
        mostRecentEventCount: true,
        inlineImageLeft: true,
        editable: true,
        fontVariant: true,
        borderBottomRightRadius: true,
        borderBottomColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        borderRadius: true,
        borderRightColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        borderColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        borderTopRightRadius: true,
        borderStyle: true,
        borderBottomLeftRadius: true,
        borderLeftColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        borderTopLeftRadius: true,
        borderTopColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        }
    }
};
var AndroidTextInputNativeComponent = _NativeComponentRegistry.get('AndroidTextInput', ()=>__INTERNAL_VIEW_CONFIG);
var _default = AndroidTextInputNativeComponent;


}),
"./node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js": 
/*!**********************************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js ***!
  \**********************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get Commands () {
        return Commands;
    },
    get __INTERNAL_VIEW_CONFIG () {
        return __INTERNAL_VIEW_CONFIG;
    },
    get default () {
        return _default;
    }
});
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs");
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _NativeComponentRegistry = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ../../NativeComponent/NativeComponentRegistry */ "./node_modules/react-native/Libraries/NativeComponent/NativeComponentRegistry.js"));
var _codegenNativeCommands = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../Utilities/codegenNativeCommands */ "./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js"));
var _RCTTextInputViewConfig = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./RCTTextInputViewConfig */ "./node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js"));
var Commands = (0, _codegenNativeCommands.default)({
    supportedCommands: [
        'focus',
        'blur',
        'setTextAndSelection'
    ]
});
var __INTERNAL_VIEW_CONFIG = _object_spread._({
    uiViewClassName: 'RCTSinglelineTextInputView'
}, _RCTTextInputViewConfig.default);
var SinglelineTextInputNativeComponent = _NativeComponentRegistry.get('RCTSinglelineTextInputView', ()=>__INTERNAL_VIEW_CONFIG);
var _default = SinglelineTextInputNativeComponent;


}),
"./node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js": 
/*!************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js ***!
  \************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs");
var _TurboModuleRegistry = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ../../../../../../Libraries/TurboModule/TurboModuleRegistry */ "./node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js"));
var _nullthrows = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! nullthrows */ "./node_modules/nullthrows/nullthrows.js"));
var RawNativeDOM = _TurboModuleRegistry.get('NativeDOMCxx');
var NativeDOM = {
    getParentNode (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getParentNode(shadowNode);
    },
    getChildNodes (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getChildNodes(shadowNode);
    },
    isConnected (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).isConnected(shadowNode);
    },
    compareDocumentPosition (shadowNode, otherShadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).compareDocumentPosition(shadowNode, otherShadowNode);
    },
    getTextContent (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getTextContent(shadowNode);
    },
    getBoundingClientRect (shadowNode, includeTransform) {
        return (0, _nullthrows.default)(RawNativeDOM).getBoundingClientRect(shadowNode, includeTransform);
    },
    getOffset (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getOffset(shadowNode);
    },
    getScrollPosition (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getScrollPosition(shadowNode);
    },
    getScrollSize (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getScrollSize(shadowNode);
    },
    getInnerSize (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getInnerSize(shadowNode);
    },
    getBorderWidth (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getBorderWidth(shadowNode);
    },
    getTagName (shadowNode) {
        return (0, _nullthrows.default)(RawNativeDOM).getTagName(shadowNode);
    },
    hasPointerCapture (shadowNode, pointerId) {
        return (0, _nullthrows.default)(RawNativeDOM).hasPointerCapture(shadowNode, pointerId);
    },
    setPointerCapture (shadowNode, pointerId) {
        return (0, _nullthrows.default)(RawNativeDOM).setPointerCapture(shadowNode, pointerId);
    },
    releasePointerCapture (shadowNode, pointerId) {
        return (0, _nullthrows.default)(RawNativeDOM).releasePointerCapture(shadowNode, pointerId);
    },
    measure (shadowNode, callback) {
        return (0, _nullthrows.default)(RawNativeDOM).measure(shadowNode, callback);
    },
    measureInWindow (shadowNode, callback) {
        return (0, _nullthrows.default)(RawNativeDOM).measureInWindow(shadowNode, callback);
    },
    measureLayout (shadowNode, relativeNode, onFail, onSuccess) {
        return (0, _nullthrows.default)(RawNativeDOM).measureLayout(shadowNode, relativeNode, onFail, onSuccess);
    }
};
var _default = NativeDOM;


}),
"./node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js": 
/*!********************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Components/TextInput/RCTTextInputViewConfig.js ***!
  \********************************************************************************************/
(function (module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict-local
 * @format
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _object_spread_props = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ "./node_modules/@swc/helpers/cjs/_object_spread_props.cjs");
var _ViewConfigIgnore = __webpack_require__(/*! ../../NativeComponent/ViewConfigIgnore */ "./node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js");
var RCTTextInputViewConfig = {
    bubblingEventTypes: {
        topBlur: {
            phasedRegistrationNames: {
                bubbled: 'onBlur',
                captured: 'onBlurCapture'
            }
        },
        topChange: {
            phasedRegistrationNames: {
                bubbled: 'onChange',
                captured: 'onChangeCapture'
            }
        },
        topEndEditing: {
            phasedRegistrationNames: {
                bubbled: 'onEndEditing',
                captured: 'onEndEditingCapture'
            }
        },
        topFocus: {
            phasedRegistrationNames: {
                bubbled: 'onFocus',
                captured: 'onFocusCapture'
            }
        },
        topKeyPress: {
            phasedRegistrationNames: {
                bubbled: 'onKeyPress',
                captured: 'onKeyPressCapture'
            }
        },
        topSubmitEditing: {
            phasedRegistrationNames: {
                bubbled: 'onSubmitEditing',
                captured: 'onSubmitEditingCapture'
            }
        },
        topTouchCancel: {
            phasedRegistrationNames: {
                bubbled: 'onTouchCancel',
                captured: 'onTouchCancelCapture'
            }
        },
        topTouchEnd: {
            phasedRegistrationNames: {
                bubbled: 'onTouchEnd',
                captured: 'onTouchEndCapture'
            }
        },
        topTouchMove: {
            phasedRegistrationNames: {
                bubbled: 'onTouchMove',
                captured: 'onTouchMoveCapture'
            }
        }
    },
    directEventTypes: {
        topScroll: {
            registrationName: 'onScroll'
        },
        topSelectionChange: {
            registrationName: 'onSelectionChange'
        },
        topContentSizeChange: {
            registrationName: 'onContentSizeChange'
        },
        topChangeSync: {
            registrationName: 'onChangeSync'
        },
        topKeyPressSync: {
            registrationName: 'onKeyPressSync'
        }
    },
    validAttributes: _object_spread_props._(_object_spread._({
        dynamicTypeRamp: true,
        fontSize: true,
        fontWeight: true,
        fontVariant: true,
        // flowlint-next-line untyped-import:off
        textShadowOffset: {
            diff: __webpack_require__(/*! ../../Utilities/differ/sizesDiffer */ "./node_modules/react-native/Libraries/Utilities/differ/sizesDiffer.js")
        },
        allowFontScaling: true,
        fontStyle: true,
        textTransform: true,
        textAlign: true,
        fontFamily: true,
        lineHeight: true,
        isHighlighted: true,
        writingDirection: true,
        textDecorationLine: true,
        textShadowRadius: true,
        letterSpacing: true,
        textDecorationStyle: true,
        textDecorationColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        color: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        maxFontSizeMultiplier: true,
        textShadowColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        editable: true,
        inputAccessoryViewID: true,
        inputAccessoryViewButtonLabel: true,
        caretHidden: true,
        enablesReturnKeyAutomatically: true,
        placeholderTextColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        clearButtonMode: true,
        keyboardType: true,
        selection: true,
        returnKeyType: true,
        submitBehavior: true,
        mostRecentEventCount: true,
        scrollEnabled: true,
        selectionColor: {
            process: (__webpack_require__(/*! ../../StyleSheet/processColor */ "./node_modules/react-native/Libraries/StyleSheet/processColor.js")/* ["default"] */["default"])
        },
        contextMenuHidden: true,
        secureTextEntry: true,
        placeholder: true,
        autoCorrect: true,
        multiline: true,
        textContentType: true,
        maxLength: true,
        autoCapitalize: true,
        keyboardAppearance: true,
        passwordRules: true,
        spellCheck: true,
        selectTextOnFocus: true,
        text: true,
        clearTextOnFocus: true,
        showSoftInputOnFocus: true,
        autoFocus: true,
        lineBreakStrategyIOS: true,
        lineBreakModeIOS: true,
        smartInsertDelete: true
    }, (0, _ViewConfigIgnore.ConditionallyIgnoredEventHandlers)({
        onChange: true,
        onSelectionChange: true,
        onContentSizeChange: true,
        onScroll: true,
        onChangeSync: true,
        onKeyPressSync: true
    })), {
        disableKeyboardShortcuts: true
    })
};
module.exports = RCTTextInputViewConfig;


}),
"./node_modules/react-native/Libraries/Components/TextInput/TextInputState.js": 
/*!************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Components/TextInput/TextInputState.js ***!
  \************************************************************************************/
(function (module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // This class is responsible for coordinating the "focused" state for
// TextInputs. All calls relating to the keyboard should be funneled
// through here.
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _AndroidTextInputNativeComponent = __webpack_require__(/*! ../../Components/TextInput/AndroidTextInputNativeComponent */ "./node_modules/react-native/Libraries/Components/TextInput/AndroidTextInputNativeComponent.js");
var _RCTSingelineTextInputNativeComponent = __webpack_require__(/*! ../../Components/TextInput/RCTSingelineTextInputNativeComponent */ "./node_modules/react-native/Libraries/Components/TextInput/RCTSingelineTextInputNativeComponent.js");
var findNodeHandle = (__webpack_require__(/*! ../../ReactNative/RendererProxy */ "./node_modules/react-native/Libraries/ReactNative/RendererProxy.js")/* .findNodeHandle */.findNodeHandle);
var Platform = __webpack_require__(/*! ../../Utilities/Platform */ "./node_modules/react-native/Libraries/Utilities/Platform.android.js");
var currentlyFocusedInputRef = null;
var inputs = new Set();
function currentlyFocusedInput() {
    return currentlyFocusedInputRef;
}
/**
 * Returns the ID of the currently focused text field, if one exists
 * If no text field is focused it returns null
 */ function currentlyFocusedField() {
    if (true) {
        console.error('currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput');
    }
    return findNodeHandle(currentlyFocusedInputRef);
}
function focusInput(textField) {
    if (currentlyFocusedInputRef !== textField && textField != null) {
        currentlyFocusedInputRef = textField;
    }
}
function blurInput(textField) {
    if (currentlyFocusedInputRef === textField && textField != null) {
        currentlyFocusedInputRef = null;
    }
}
function focusField(textFieldID) {
    if (true) {
        console.error('focusField no longer works. Use focusInput');
    }
    return;
}
function blurField(textFieldID) {
    if (true) {
        console.error('blurField no longer works. Use blurInput');
    }
    return;
}
/**
 * @param {number} TextInputID id of the text field to focus
 * Focuses the specified text field
 * noop if the text field was already focused or if the field is not editable
 */ function focusTextInput(textField) {
    if (typeof textField === 'number') {
        if (true) {
            console.error('focusTextInput must be called with a host component. Passing a react tag is deprecated.');
        }
        return;
    }
    if (textField != null) {
        var // $FlowFixMe - `currentProps` is missing in `NativeMethods`
        _textField_currentProps;
        var fieldCanBeFocused = currentlyFocusedInputRef !== textField && ((_textField_currentProps = textField.currentProps) === null || _textField_currentProps === void 0 ? void 0 : _textField_currentProps.editable) !== false;
        if (!fieldCanBeFocused) {
            return;
        }
        focusInput(textField);
        if (Platform.OS === 'ios') {
            // This isn't necessarily a single line text input
            // But commands don't actually care as long as the thing being passed in
            // actually has a command with that name. So this should work with single
            // and multiline text inputs. Ideally we'll merge them into one component
            // in the future.
            _RCTSingelineTextInputNativeComponent.Commands.focus(textField);
        } else if (Platform.OS === 'android') {
            _AndroidTextInputNativeComponent.Commands.focus(textField);
        }
    }
}
/**
 * @param {number} textFieldID id of the text field to unfocus
 * Unfocuses the specified text field
 * noop if it wasn't focused
 */ function blurTextInput(textField) {
    if (typeof textField === 'number') {
        if (true) {
            console.error('blurTextInput must be called with a host component. Passing a react tag is deprecated.');
        }
        return;
    }
    if (currentlyFocusedInputRef === textField && textField != null) {
        blurInput(textField);
        if (Platform.OS === 'ios') {
            // This isn't necessarily a single line text input
            // But commands don't actually care as long as the thing being passed in
            // actually has a command with that name. So this should work with single
            // and multiline text inputs. Ideally we'll merge them into one component
            // in the future.
            _RCTSingelineTextInputNativeComponent.Commands.blur(textField);
        } else if (Platform.OS === 'android') {
            _AndroidTextInputNativeComponent.Commands.blur(textField);
        }
    }
}
function registerInput(textField) {
    if (typeof textField === 'number') {
        if (true) {
            console.error('registerInput must be called with a host component. Passing a react tag is deprecated.');
        }
        return;
    }
    inputs.add(textField);
}
function unregisterInput(textField) {
    if (typeof textField === 'number') {
        if (true) {
            console.error('unregisterInput must be called with a host component. Passing a react tag is deprecated.');
        }
        return;
    }
    inputs.delete(textField);
}
function isTextInput(textField) {
    if (typeof textField === 'number') {
        if (true) {
            console.error('isTextInput must be called with a host component. Passing a react tag is deprecated.');
        }
        return false;
    }
    return inputs.has(textField);
}
module.exports = {
    currentlyFocusedInput,
    focusInput,
    blurInput,
    currentlyFocusedField,
    focusField,
    blurField,
    focusTextInput,
    blurTextInput,
    registerInput,
    unregisterInput,
    isTextInput
};


}),
"./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload.js": 
/*!******************************************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload.js ***!
  \******************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *      
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get create () {
        return create;
    },
    get diff () {
        return diff;
    }
});
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _flattenStyle = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../StyleSheet/flattenStyle */ "./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js"));
var _deepDiffer = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../Utilities/differ/deepDiffer */ "./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js"));
var emptyObject = {};
/**
 * Create a payload that contains all the updates between two sets of props.
 *
 * These helpers are all encapsulated into a single module, because they use
 * mutation as a performance optimization which leads to subtle shared
 * dependencies between the code paths. To avoid this mutable state leaking
 * across modules, I've kept them isolated to this module.
 */ // Tracks removed keys
var removedKeys = null;
var removedKeyCount = 0;
var deepDifferOptions = {
    unsafelyIgnoreFunctions: true
};
function defaultDiffer(prevProp, nextProp) {
    if (typeof nextProp !== 'object' || nextProp === null) {
        // Scalars have already been checked for equality
        return true;
    } else {
        // For objects and arrays, the default diffing algorithm is a deep compare
        return (0, _deepDiffer.default)(prevProp, nextProp, deepDifferOptions);
    }
}
function restoreDeletedValuesInNestedArray(updatePayload, node, validAttributes) {
    if (Array.isArray(node)) {
        var i = node.length;
        while(i-- && removedKeyCount > 0){
            restoreDeletedValuesInNestedArray(updatePayload, node[i], validAttributes);
        }
    } else if (node && removedKeyCount > 0) {
        var obj = node;
        for(var propKey in removedKeys){
            // $FlowFixMe[incompatible-use] found when upgrading Flow
            if (!removedKeys[propKey]) {
                continue;
            }
            var nextProp = obj[propKey];
            if (nextProp === undefined) {
                continue;
            }
            var attributeConfig = validAttributes[propKey];
            if (!attributeConfig) {
                continue; // not a valid native prop
            }
            if (typeof nextProp === 'function') {
                // $FlowFixMe[incompatible-type] found when upgrading Flow
                nextProp = true;
            }
            if (typeof nextProp === 'undefined') {
                // $FlowFixMe[incompatible-type] found when upgrading Flow
                nextProp = null;
            }
            if (typeof attributeConfig !== 'object') {
                // case: !Object is the default case
                updatePayload[propKey] = nextProp;
            } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
                // case: CustomAttributeConfiguration
                var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
            // $FlowFixMe[incompatible-use] found when upgrading Flow
            removedKeys[propKey] = false;
            removedKeyCount--;
        }
    }
}
function diffNestedArrayProperty(updatePayload, prevArray, nextArray, validAttributes) {
    var minLength = prevArray.length < nextArray.length ? prevArray.length : nextArray.length;
    var i;
    for(i = 0; i < minLength; i++){
        // Diff any items in the array in the forward direction. Repeated keys
        // will be overwritten by later values.
        updatePayload = diffNestedProperty(updatePayload, prevArray[i], nextArray[i], validAttributes);
    }
    for(; i < prevArray.length; i++){
        // Clear out all remaining properties.
        updatePayload = clearNestedProperty(updatePayload, prevArray[i], validAttributes);
    }
    for(; i < nextArray.length; i++){
        // Add all remaining properties.
        updatePayload = addNestedProperty(updatePayload, nextArray[i], validAttributes);
    }
    return updatePayload;
}
function diffNestedProperty(updatePayload, prevProp, nextProp, validAttributes) {
    if (!updatePayload && prevProp === nextProp) {
        // If no properties have been added, then we can bail out quickly on object
        // equality.
        return updatePayload;
    }
    if (!prevProp || !nextProp) {
        if (nextProp) {
            return addNestedProperty(updatePayload, nextProp, validAttributes);
        }
        if (prevProp) {
            return clearNestedProperty(updatePayload, prevProp, validAttributes);
        }
        return updatePayload;
    }
    if (!Array.isArray(prevProp) && !Array.isArray(nextProp)) {
        // Both are leaves, we can diff the leaves.
        return diffProperties(updatePayload, prevProp, nextProp, validAttributes);
    }
    if (Array.isArray(prevProp) && Array.isArray(nextProp)) {
        // Both are arrays, we can diff the arrays.
        return diffNestedArrayProperty(updatePayload, prevProp, nextProp, validAttributes);
    }
    if (Array.isArray(prevProp)) {
        return diffProperties(updatePayload, // $FlowFixMe - We know that this is always an object when the input is.
        (0, _flattenStyle.default)(prevProp), // $FlowFixMe - We know that this isn't an array because of above flow.
        nextProp, validAttributes);
    }
    return diffProperties(updatePayload, prevProp, // $FlowFixMe - We know that this is always an object when the input is.
    (0, _flattenStyle.default)(nextProp), validAttributes);
}
/**
 * addNestedProperty takes a single set of props and valid attribute
 * attribute configurations. It processes each prop and adds it to the
 * updatePayload.
 */ function addNestedProperty(updatePayload, nextProp, validAttributes) {
    if (!nextProp) {
        return updatePayload;
    }
    if (!Array.isArray(nextProp)) {
        // Add each property of the leaf.
        return addProperties(updatePayload, nextProp, validAttributes);
    }
    for(var i = 0; i < nextProp.length; i++){
        // Add all the properties of the array.
        updatePayload = addNestedProperty(updatePayload, nextProp[i], validAttributes);
    }
    return updatePayload;
}
/**
 * clearNestedProperty takes a single set of props and valid attributes. It
 * adds a null sentinel to the updatePayload, for each prop key.
 */ function clearNestedProperty(updatePayload, prevProp, validAttributes) {
    if (!prevProp) {
        return updatePayload;
    }
    if (!Array.isArray(prevProp)) {
        // Add each property of the leaf.
        return clearProperties(updatePayload, prevProp, validAttributes);
    }
    for(var i = 0; i < prevProp.length; i++){
        // Add all the properties of the array.
        updatePayload = clearNestedProperty(updatePayload, prevProp[i], validAttributes);
    }
    return updatePayload;
}
/**
 * diffProperties takes two sets of props and a set of valid attributes
 * and write to updatePayload the values that changed or were deleted.
 * If no updatePayload is provided, a new one is created and returned if
 * anything changed.
 */ function diffProperties(updatePayload, prevProps, nextProps, validAttributes) {
    var attributeConfig;
    var nextProp;
    var prevProp;
    for(var propKey in nextProps){
        attributeConfig = validAttributes[propKey];
        if (!attributeConfig) {
            continue; // not a valid native prop
        }
        prevProp = prevProps[propKey];
        nextProp = nextProps[propKey];
        // functions are converted to booleans as markers that the associated
        // events should be sent from native.
        if (typeof nextProp === 'function') {
            nextProp = true;
            // If nextProp is not a function, then don't bother changing prevProp
            // since nextProp will win and go into the updatePayload regardless.
            if (typeof prevProp === 'function') {
                prevProp = true;
            }
        }
        // An explicit value of undefined is treated as a null because it overrides
        // any other preceding value.
        if (typeof nextProp === 'undefined') {
            nextProp = null;
            if (typeof prevProp === 'undefined') {
                prevProp = null;
            }
        }
        if (removedKeys) {
            removedKeys[propKey] = false;
        }
        if (updatePayload && updatePayload[propKey] !== undefined) {
            // Something else already triggered an update to this key because another
            // value diffed. Since we're now later in the nested arrays our value is
            // more important so we need to calculate it and override the existing
            // value. It doesn't matter if nothing changed, we'll set it anyway.
            // Pattern match on: attributeConfig
            if (typeof attributeConfig !== 'object') {
                // case: !Object is the default case
                updatePayload[propKey] = nextProp;
            } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
                // case: CustomAttributeConfiguration
                var nextValue = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
                updatePayload[propKey] = nextValue;
            }
            continue;
        }
        if (prevProp === nextProp) {
            continue; // nothing changed
        }
        // Pattern match on: attributeConfig
        if (typeof attributeConfig !== 'object') {
            // case: !Object is the default case
            if (defaultDiffer(prevProp, nextProp)) {
                // a normal leaf has changed
                (updatePayload || (updatePayload = {}))[propKey] = nextProp;
            }
        } else if (typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
            // case: CustomAttributeConfiguration
            var shouldUpdate = prevProp === undefined || (typeof attributeConfig.diff === 'function' ? attributeConfig.diff(prevProp, nextProp) : defaultDiffer(prevProp, nextProp));
            if (shouldUpdate) {
                var nextValue1 = typeof attributeConfig.process === 'function' ? attributeConfig.process(nextProp) : nextProp;
                (updatePayload || (updatePayload = {}))[propKey] = nextValue1;
            }
        } else {
            // default: fallthrough case when nested properties are defined
            removedKeys = null;
            removedKeyCount = 0;
            // We think that attributeConfig is not CustomAttributeConfiguration at
            // this point so we assume it must be AttributeConfiguration.
            updatePayload = diffNestedProperty(updatePayload, prevProp, nextProp, attributeConfig);
            if (removedKeyCount > 0 && updatePayload) {
                restoreDeletedValuesInNestedArray(updatePayload, nextProp, attributeConfig);
                removedKeys = null;
            }
        }
    }
    // Also iterate through all the previous props to catch any that have been
    // removed and make sure native gets the signal so it can reset them to the
    // default.
    for(var propKey1 in prevProps){
        if (nextProps[propKey1] !== undefined) {
            continue; // we've already covered this key in the previous pass
        }
        attributeConfig = validAttributes[propKey1];
        if (!attributeConfig) {
            continue; // not a valid native prop
        }
        if (updatePayload && updatePayload[propKey1] !== undefined) {
            continue;
        }
        prevProp = prevProps[propKey1];
        if (prevProp === undefined) {
            continue; // was already empty anyway
        }
        // Pattern match on: attributeConfig
        if (typeof attributeConfig !== 'object' || typeof attributeConfig.diff === 'function' || typeof attributeConfig.process === 'function') {
            // case: CustomAttributeConfiguration | !Object
            // Flag the leaf property for removal by sending a sentinel.
            (updatePayload || (updatePayload = {}))[propKey1] = null;
            if (!removedKeys) {
                removedKeys = {};
            }
            if (!removedKeys[propKey1]) {
                removedKeys[propKey1] = true;
                removedKeyCount++;
            }
        } else {
            // default:
            // This is a nested attribute configuration where all the properties
            // were removed so we need to go through and clear out all of them.
            updatePayload = clearNestedProperty(updatePayload, prevProp, attributeConfig);
        }
    }
    return updatePayload;
}
/**
 * addProperties adds all the valid props to the payload after being processed.
 */ function addProperties(updatePayload, props, validAttributes) {
    // TODO: Fast path
    return diffProperties(updatePayload, emptyObject, props, validAttributes);
}
/**
 * clearProperties clears all the previous props by adding a null sentinel
 * to the payload for each valid key.
 */ function clearProperties(updatePayload, prevProps, validAttributes) {
    // TODO: Fast path
    return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);
}
function create(props, validAttributes) {
    return addProperties(null, props, validAttributes);
}
function diff(prevProps, nextProps, validAttributes) {
    return diffProperties(null, prevProps, nextProps, validAttributes);
}


}),
"./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps.js": 
/*!********************************************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps.js ***!
  \********************************************************************************************************/
(function (__unused_webpack_module, exports) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return warnForStyleProps;
    }
}));
function warnForStyleProps(props, validAttributes) {
    if (true) {
        for(var key in validAttributes.style){
            // $FlowFixMe[invalid-computed-prop]
            if (!(validAttributes[key] || props[key] === undefined)) {
                console.error('You are setting the style `{ %s' + ': ... }` as a prop. You ' + 'should nest it in a style object. ' + 'E.g. `{ style: { %s' + ': ... } }`', key, key);
            }
        }
    }
}


}),
"./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js": 
/*!************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/StyleSheet/flattenStyle.js ***!
  \************************************************************************/
(function (module) {
"use strict";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict-local
 * @format
 */ 
function flattenStyle(style) {
    if (style === null || typeof style !== 'object') {
        return undefined;
    }
    if (!Array.isArray(style)) {
        // $FlowFixMe[incompatible-return]
        return style;
    }
    var result = {};
    for(var i = 0, styleLength = style.length; i < styleLength; ++i){
        // $FlowFixMe[underconstrained-implicit-instantiation]
        var computedStyle = flattenStyle(style[i]);
        if (computedStyle) {
            // $FlowFixMe[invalid-in-rhs]
            for(var key in computedStyle){
                // $FlowFixMe[incompatible-use]
                // $FlowFixMe[invalid-computed-prop]
                result[key] = computedStyle[key];
            }
        }
    }
    // $FlowFixMe[incompatible-return]
    return result;
}
module.exports = flattenStyle;


}),
"./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js": 
/*!********************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js ***!
  \********************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *      
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var dispatchCommand = (__webpack_require__(/*! ../ReactNative/RendererProxy */ "./node_modules/react-native/Libraries/ReactNative/RendererProxy.js")/* .dispatchCommand */.dispatchCommand);
function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach((command)=>{
        // $FlowFixMe[missing-local-annot]
        commandObj[command] = (ref, ...args)=>{
            // $FlowFixMe[incompatible-call]
            dispatchCommand(ref, command, args);
        };
    });
    return commandObj;
}
var _default = codegenNativeCommands;


}),
"./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js": 
/*!****************************************************************************!*\
  !*** ./node_modules/react-native/Libraries/Utilities/differ/deepDiffer.js ***!
  \****************************************************************************/
(function (module) {
"use strict";
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *      
 */ 
var logListeners;
function unstable_setLogListeners(listeners) {
    logListeners = listeners;
}
/*
 * @returns {bool} true if different, false if equal
 */ var deepDiffer = function(one, two, ref, maybeOptions) {
    var maxDepthOrOptions = ref === void 0 ? -1 : ref;
    var options = typeof maxDepthOrOptions === 'number' ? maybeOptions : maxDepthOrOptions;
    var maxDepth = typeof maxDepthOrOptions === 'number' ? maxDepthOrOptions : -1;
    if (maxDepth === 0) {
        return true;
    }
    if (one === two) {
        // Short circuit on identical object references instead of traversing them.
        return false;
    }
    if (typeof one === 'function' && typeof two === 'function') {
        // We consider all functions equal unless explicitly configured otherwise
        var unsafelyIgnoreFunctions = options === null || options === void 0 ? void 0 : options.unsafelyIgnoreFunctions;
        if (unsafelyIgnoreFunctions == null) {
            if (logListeners && logListeners.onDifferentFunctionsIgnored && (!options || !('unsafelyIgnoreFunctions' in options))) {
                logListeners.onDifferentFunctionsIgnored(one.name, two.name);
            }
            unsafelyIgnoreFunctions = true;
        }
        return !unsafelyIgnoreFunctions;
    }
    if (typeof one !== 'object' || one === null) {
        // Primitives can be directly compared
        return one !== two;
    }
    if (typeof two !== 'object' || two === null) {
        // We know they are different because the previous case would have triggered
        // otherwise.
        return true;
    }
    if (one.constructor !== two.constructor) {
        return true;
    }
    if (Array.isArray(one)) {
        // We know two is also an array because the constructors are equal
        var len = one.length;
        if (two.length !== len) {
            return true;
        }
        for(var ii = 0; ii < len; ii++){
            if (deepDiffer(one[ii], two[ii], maxDepth - 1, options)) {
                return true;
            }
        }
    } else {
        for(var key in one){
            if (deepDiffer(one[key], two[key], maxDepth - 1, options)) {
                return true;
            }
        }
        for(var twoKey in two){
            // The only case we haven't checked yet is keys that are in two but aren't
            // in one, which means they are different.
            if (one[twoKey] === undefined && two[twoKey] !== undefined) {
                return true;
            }
        }
    }
    return false;
};
deepDiffer.unstable_setLogListeners = unstable_setLogListeners;
module.exports = deepDiffer;


}),
"./node_modules/react-native/src/private/webapis/dom/geometry/DOMRect.js": 
/*!*******************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/geometry/DOMRect.js ***!
  \*******************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict
 * @format
 */ /**
 * The JSDoc comments in this file have been extracted from [DOMRect](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect).
 * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRect/contributors.txt),
 * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return DOMRect;
    }
}));
var _call_super = __webpack_require__(/*! @swc/helpers/_/_call_super */ "./node_modules/@swc/helpers/cjs/_call_super.cjs");
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
var _inherits = __webpack_require__(/*! @swc/helpers/_/_inherits */ "./node_modules/@swc/helpers/cjs/_inherits.cjs");
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _wrap_native_super = __webpack_require__(/*! @swc/helpers/_/_wrap_native_super */ "./node_modules/@swc/helpers/cjs/_wrap_native_super.cjs");
var _DOMRectReadOnly = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./DOMRectReadOnly */ "./node_modules/react-native/src/private/webapis/dom/geometry/DOMRectReadOnly.js"));
var DOMRect = /*#__PURE__*/ function(DOMRectReadOnly) {
    "use strict";
    _inherits._(DOMRect, DOMRectReadOnly);
    function DOMRect() {
        _class_call_check._(this, DOMRect);
        return _call_super._(this, DOMRect, arguments);
    }
    _create_class._(DOMRect, [
        {
            key: "x",
            get: /**
   * The x coordinate of the `DOMRect`'s origin.
   */ function() {
                return this.__getInternalX();
            },
            set: function(x) {
                this.__setInternalX(x);
            }
        },
        {
            key: "y",
            get: /**
   * The y coordinate of the `DOMRect`'s origin.
   */ function() {
                return this.__getInternalY();
            },
            set: function(y) {
                this.__setInternalY(y);
            }
        },
        {
            key: "width",
            get: /**
   * The width of the `DOMRect`.
   */ function() {
                return this.__getInternalWidth();
            },
            set: function(width) {
                this.__setInternalWidth(width);
            }
        },
        {
            key: "height",
            get: /**
   * The height of the `DOMRect`.
   */ function() {
                return this.__getInternalHeight();
            },
            set: function(height) {
                this.__setInternalHeight(height);
            }
        }
    ], [
        {
            key: "fromRect",
            value: /**
   * Creates a new `DOMRect` object with a given location and dimensions.
   */ function fromRect(rect) {
                if (!rect) {
                    return new DOMRect();
                }
                return new DOMRect(rect.x, rect.y, rect.width, rect.height);
            }
        }
    ]);
    return DOMRect;
}(_wrap_native_super._(_DOMRectReadOnly.default));


}),
"./node_modules/react-native/src/private/webapis/dom/geometry/DOMRectReadOnly.js": 
/*!***************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/geometry/DOMRectReadOnly.js ***!
  \***************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *       strict
 * @format
 */ /**
 * The JSDoc comments in this file have been extracted from [DOMRectReadOnly](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly).
 * Content by [Mozilla Contributors](https://developer.mozilla.org/en-US/docs/Web/API/DOMRectReadOnly/contributors.txt),
 * licensed under [CC-BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5/).
 */ // flowlint sketchy-null:off, unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return DOMRectReadOnly;
    }
}));
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _class_private_field_loose_base = __webpack_require__(/*! @swc/helpers/_/_class_private_field_loose_base */ "./node_modules/@swc/helpers/cjs/_class_private_field_loose_base.cjs");
var _class_private_field_loose_key = __webpack_require__(/*! @swc/helpers/_/_class_private_field_loose_key */ "./node_modules/@swc/helpers/cjs/_class_private_field_loose_key.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
function castToNumber(value) {
    return value ? Number(value) : 0;
}
var _x = /*#__PURE__*/ _class_private_field_loose_key._("_x"), _y = /*#__PURE__*/ _class_private_field_loose_key._("_y"), _width = /*#__PURE__*/ _class_private_field_loose_key._("_width"), _height = /*#__PURE__*/ _class_private_field_loose_key._("_height");
var DOMRectReadOnly = /*#__PURE__*/ function() {
    "use strict";
    function DOMRectReadOnly(x, y, width, height) {
        _class_call_check._(this, DOMRectReadOnly);
        Object.defineProperty(this, _x, {
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, _y, {
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, _width, {
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, _height, {
            writable: true,
            value: void 0
        });
        this.__setInternalX(x);
        this.__setInternalY(y);
        this.__setInternalWidth(width);
        this.__setInternalHeight(height);
    }
    _create_class._(DOMRectReadOnly, [
        {
            key: "x",
            get: /**
   * The x coordinate of the `DOMRectReadOnly`'s origin.
   */ function() {
                return _class_private_field_loose_base._(this, _x)[_x];
            }
        },
        {
            key: "y",
            get: /**
   * The y coordinate of the `DOMRectReadOnly`'s origin.
   */ function() {
                return _class_private_field_loose_base._(this, _y)[_y];
            }
        },
        {
            key: "width",
            get: /**
   * The width of the `DOMRectReadOnly`.
   */ function() {
                return _class_private_field_loose_base._(this, _width)[_width];
            }
        },
        {
            key: "height",
            get: /**
   * The height of the `DOMRectReadOnly`.
   */ function() {
                return _class_private_field_loose_base._(this, _height)[_height];
            }
        },
        {
            key: "top",
            get: /**
   * Returns the top coordinate value of the `DOMRect` (has the same value as `y`, or `y + height` if `height` is negative).
   */ function() {
                var height = _class_private_field_loose_base._(this, _height)[_height];
                var y = _class_private_field_loose_base._(this, _y)[_y];
                if (height < 0) {
                    return y + height;
                }
                return y;
            }
        },
        {
            key: "right",
            get: /**
   * Returns the right coordinate value of the `DOMRect` (has the same value as ``x + width`, or `x` if `width` is negative).
   */ function() {
                var width = _class_private_field_loose_base._(this, _width)[_width];
                var x = _class_private_field_loose_base._(this, _x)[_x];
                if (width < 0) {
                    return x;
                }
                return x + width;
            }
        },
        {
            key: "bottom",
            get: /**
   * Returns the bottom coordinate value of the `DOMRect` (has the same value as `y + height`, or `y` if `height` is negative).
   */ function() {
                var height = _class_private_field_loose_base._(this, _height)[_height];
                var y = _class_private_field_loose_base._(this, _y)[_y];
                if (height < 0) {
                    return y;
                }
                return y + height;
            }
        },
        {
            key: "left",
            get: /**
   * Returns the left coordinate value of the `DOMRect` (has the same value as `x`, or `x + width` if `width` is negative).
   */ function() {
                var width = _class_private_field_loose_base._(this, _width)[_width];
                var x = _class_private_field_loose_base._(this, _x)[_x];
                if (width < 0) {
                    return x + width;
                }
                return x;
            }
        },
        {
            key: "toJSON",
            value: function toJSON() {
                var _this = this, x = _this.x, y = _this.y, width = _this.width, height = _this.height, top = _this.top, left = _this.left, bottom = _this.bottom, right = _this.right;
                return {
                    x,
                    y,
                    width,
                    height,
                    top,
                    left,
                    bottom,
                    right
                };
            }
        },
        {
            key: "__getInternalX",
            value: function __getInternalX() {
                return _class_private_field_loose_base._(this, _x)[_x];
            }
        },
        {
            key: "__getInternalY",
            value: function __getInternalY() {
                return _class_private_field_loose_base._(this, _y)[_y];
            }
        },
        {
            key: "__getInternalWidth",
            value: function __getInternalWidth() {
                return _class_private_field_loose_base._(this, _width)[_width];
            }
        },
        {
            key: "__getInternalHeight",
            value: function __getInternalHeight() {
                return _class_private_field_loose_base._(this, _height)[_height];
            }
        },
        {
            key: "__setInternalX",
            value: function __setInternalX(x) {
                _class_private_field_loose_base._(this, _x)[_x] = castToNumber(x);
            }
        },
        {
            key: "__setInternalY",
            value: function __setInternalY(y) {
                _class_private_field_loose_base._(this, _y)[_y] = castToNumber(y);
            }
        },
        {
            key: "__setInternalWidth",
            value: function __setInternalWidth(width) {
                _class_private_field_loose_base._(this, _width)[_width] = castToNumber(width);
            }
        },
        {
            key: "__setInternalHeight",
            value: function __setInternalHeight(height) {
                _class_private_field_loose_base._(this, _height)[_height] = castToNumber(height);
            }
        }
    ], [
        {
            key: "fromRect",
            value: /**
   * Creates a new `DOMRectReadOnly` object with a given location and dimensions.
   */ function fromRect(rect) {
                if (!rect) {
                    return new DOMRectReadOnly();
                }
                return new DOMRectReadOnly(rect.x, rect.y, rect.width, rect.height);
            }
        }
    ]);
    return DOMRectReadOnly;
}();


}),
"./node_modules/react-native/src/private/webapis/dom/nodes/ReactNativeElement.js": 
/*!***************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/nodes/ReactNativeElement.js ***!
  \***************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var _call_super = __webpack_require__(/*! @swc/helpers/_/_call_super */ "./node_modules/@swc/helpers/cjs/_call_super.cjs");
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
var _inherits = __webpack_require__(/*! @swc/helpers/_/_inherits */ "./node_modules/@swc/helpers/cjs/_inherits.cjs");
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs");
var _TextInputState = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../../../../Libraries/Components/TextInput/TextInputState */ "./node_modules/react-native/Libraries/Components/TextInput/TextInputState.js"));
var _FabricUIManager = __webpack_require__(/*! ../../../../../Libraries/ReactNative/FabricUIManager */ "./node_modules/react-native/Libraries/ReactNative/FabricUIManager.js");
var _ReactNativeAttributePayload = __webpack_require__(/*! ../../../../../Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload */ "./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactNativeAttributePayload.js");
var _warnForStyleProps = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../../../../../Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps */ "./node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/warnForStyleProps.js"));
var _ReadOnlyElement = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./ReadOnlyElement */ "./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js"));
var _ReadOnlyNode = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./ReadOnlyNode */ "./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js"));
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./specs/NativeDOM */ "./node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js"));
var _nullthrows = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! nullthrows */ "./node_modules/nullthrows/nullthrows.js"));
var noop = ()=>{};
// Ideally, this class would be exported as-is, but this implementation is
// significantly slower than the existing `ReactFabricHostComponent`.
// This is a very hot code path (this class is instantiated once per rendered
// host component in the tree) and we can't regress performance here.
//
// This implementation is slower because this is a subclass and we have to call
// super(), which is a very slow operation the way that Babel transforms it at
// the moment.
//
// The optimization we're doing is using an old-style function constructor,
// where we're not required to use `super()`, and we make that constructor
// extend this class so it inherits all the methods and it sets the class
// hierarchy correctly.
//
// An alternative implementation was to implement the constructor as a function
// returning a manually constructed instance using `Object.create()` but that
// was slower than this method because the engine has to create an object than
// we then discard to create a new one.
var ReactNativeElementMethods = /*#__PURE__*/ function(ReadOnlyElement) {
    "use strict";
    _inherits._(ReactNativeElementMethods, ReadOnlyElement);
    function ReactNativeElementMethods(tag, viewConfig, internalInstanceHandle) {
        _class_call_check._(this, ReactNativeElementMethods);
        var _this;
        _this = _call_super._(this, ReactNativeElementMethods, [
            internalInstanceHandle
        ]);
        _this.__nativeTag = tag;
        _this.__internalInstanceHandle = internalInstanceHandle;
        _this.__viewConfig = viewConfig;
        return _this;
    }
    _create_class._(ReactNativeElementMethods, [
        {
            key: "offsetHeight",
            get: function() {
                return Math.round((0, _ReadOnlyElement.getBoundingClientRect)(this, {
                    includeTransform: false
                }).height);
            }
        },
        {
            key: "offsetLeft",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var offset = _NativeDOM.default.getOffset(node);
                    return Math.round(offset[2]);
                }
                return 0;
            }
        },
        {
            key: "offsetParent",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var offset = _NativeDOM.default.getOffset(node);
                    // For children of the root node we currently return offset data
                    // but a `null` parent because the root node is not accessible
                    // in JavaScript yet.
                    if (offset[0] != null) {
                        var offsetParentInstanceHandle = offset[0];
                        var offsetParent = (0, _ReadOnlyNode.getPublicInstanceFromInternalInstanceHandle)(offsetParentInstanceHandle);
                        // $FlowExpectedError[incompatible-type] The value returned by `getOffset` is always an instance handle for `ReadOnlyElement`.
                        var offsetParentElement = offsetParent;
                        return offsetParentElement;
                    }
                }
                return null;
            }
        },
        {
            key: "offsetTop",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var offset = _NativeDOM.default.getOffset(node);
                    return Math.round(offset[1]);
                }
                return 0;
            }
        },
        {
            key: "offsetWidth",
            get: function() {
                return Math.round((0, _ReadOnlyElement.getBoundingClientRect)(this, {
                    includeTransform: false
                }).width);
            }
        },
        {
            /**
   * React Native compatibility methods
   */ key: "blur",
            value: function blur() {
                // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.
                _TextInputState.default.blurTextInput(this);
            }
        },
        {
            key: "focus",
            value: function focus() {
                // $FlowFixMe[incompatible-exact] Migrate all usages of `NativeMethods` to an interface to fix this.
                _TextInputState.default.focusTextInput(this);
            }
        },
        {
            key: "measure",
            value: function measure(callback) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).measure(node, callback);
                }
            }
        },
        {
            key: "measureInWindow",
            value: function measureInWindow(callback) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).measureInWindow(node, callback);
                }
            }
        },
        {
            key: "measureLayout",
            value: function measureLayout(relativeToNativeNode, onSuccess, onFail /* currently unused */ ) {
                if (!(relativeToNativeNode instanceof _ReadOnlyNode.default)) {
                    if (true) {
                        console.error('Warning: ref.measureLayout must be called with a ref to a native component.');
                    }
                    return;
                }
                var toStateNode = (0, _ReadOnlyNode.getShadowNode)(this);
                var fromStateNode = (0, _ReadOnlyNode.getShadowNode)(relativeToNativeNode);
                if (toStateNode != null && fromStateNode != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).measureLayout(toStateNode, fromStateNode, onFail != null ? onFail : noop, onSuccess != null ? onSuccess : noop);
                }
            }
        },
        {
            key: "setNativeProps",
            value: function setNativeProps(nativeProps) {
                if (true) {
                    (0, _warnForStyleProps.default)(nativeProps, this.__viewConfig.validAttributes);
                }
                var updatePayload = (0, _ReactNativeAttributePayload.create)(nativeProps, this.__viewConfig.validAttributes);
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null && updatePayload != null) {
                    (0, _nullthrows.default)((0, _FabricUIManager.getFabricUIManager)()).setNativeProps(node, updatePayload);
                }
            }
        }
    ]);
    return ReactNativeElementMethods;
}(_ReadOnlyElement.default);
// Alternative constructor just implemented to provide a better performance than
// calling super() in the original class.
function ReactNativeElement(tag, viewConfig, internalInstanceHandle) {
    this.__nativeTag = tag;
    this.__internalInstanceHandle = internalInstanceHandle;
    this.__viewConfig = viewConfig;
    (0, _ReadOnlyNode.setInstanceHandle)(this, internalInstanceHandle);
}
ReactNativeElement.prototype = Object.create(ReactNativeElementMethods.prototype);
var _default = ReactNativeElement;


}),
"./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js": 
/*!************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js ***!
  \************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get default () {
        return ReadOnlyElement;
    },
    get getBoundingClientRect () {
        return getBoundingClientRect;
    }
});
var _call_super = __webpack_require__(/*! @swc/helpers/_/_call_super */ "./node_modules/@swc/helpers/cjs/_call_super.cjs");
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
var _inherits = __webpack_require__(/*! @swc/helpers/_/_inherits */ "./node_modules/@swc/helpers/cjs/_inherits.cjs");
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ "./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs");
var _DOMRect = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ../geometry/DOMRect */ "./node_modules/react-native/src/private/webapis/dom/geometry/DOMRect.js"));
var _HTMLCollection = __webpack_require__(/*! ../oldstylecollections/HTMLCollection */ "./node_modules/react-native/src/private/webapis/dom/oldstylecollections/HTMLCollection.js");
var _ReadOnlyNode = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./ReadOnlyNode */ "./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js"));
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./specs/NativeDOM */ "./node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js"));
var _Traversal = __webpack_require__(/*! ./utilities/Traversal */ "./node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js");
var ReadOnlyElement = /*#__PURE__*/ function(ReadOnlyNode) {
    "use strict";
    _inherits._(ReadOnlyElement, ReadOnlyNode);
    function ReadOnlyElement() {
        _class_call_check._(this, ReadOnlyElement);
        return _call_super._(this, ReadOnlyElement, arguments);
    }
    _create_class._(ReadOnlyElement, [
        {
            key: "childElementCount",
            get: function() {
                return getChildElements(this).length;
            }
        },
        {
            key: "children",
            get: function() {
                return (0, _HTMLCollection.createHTMLCollection)(getChildElements(this));
            }
        },
        {
            key: "clientHeight",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var innerSize = _NativeDOM.default.getInnerSize(node);
                    return innerSize[1];
                }
                return 0;
            }
        },
        {
            key: "clientLeft",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var borderSize = _NativeDOM.default.getBorderWidth(node);
                    return borderSize[3];
                }
                return 0;
            }
        },
        {
            key: "clientTop",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var borderSize = _NativeDOM.default.getBorderWidth(node);
                    return borderSize[0];
                }
                return 0;
            }
        },
        {
            key: "clientWidth",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var innerSize = _NativeDOM.default.getInnerSize(node);
                    return innerSize[0];
                }
                return 0;
            }
        },
        {
            key: "firstElementChild",
            get: function() {
                var childElements = getChildElements(this);
                if (childElements.length === 0) {
                    return null;
                }
                return childElements[0];
            }
        },
        {
            key: "id",
            get: function() {
                var _instanceHandle_stateNode_canonical, _instanceHandle_stateNode;
                var instanceHandle = (0, _ReadOnlyNode.getInstanceHandle)(this);
                // TODO: migrate off this private React API
                // $FlowExpectedError[incompatible-use]
                var props = instanceHandle === null || instanceHandle === void 0 ? void 0 : (_instanceHandle_stateNode = instanceHandle.stateNode) === null || _instanceHandle_stateNode === void 0 ? void 0 : (_instanceHandle_stateNode_canonical = _instanceHandle_stateNode.canonical) === null || _instanceHandle_stateNode_canonical === void 0 ? void 0 : _instanceHandle_stateNode_canonical.currentProps;
                return (props === null || props === void 0 ? void 0 : props.id) ?? (props === null || props === void 0 ? void 0 : props.nativeID) ?? '';
            }
        },
        {
            key: "lastElementChild",
            get: function() {
                var childElements = getChildElements(this);
                if (childElements.length === 0) {
                    return null;
                }
                return childElements[childElements.length - 1];
            }
        },
        {
            key: "nextElementSibling",
            get: function() {
                return (0, _Traversal.getElementSibling)(this, 'next');
            }
        },
        {
            key: "nodeName",
            get: function() {
                return this.tagName;
            }
        },
        {
            key: "nodeType",
            get: function() {
                return _ReadOnlyNode.default.ELEMENT_NODE;
            }
        },
        {
            key: "nodeValue",
            get: function() {
                return null;
            },
            set: function(value) {}
        },
        {
            key: "previousElementSibling",
            get: function() {
                return (0, _Traversal.getElementSibling)(this, 'previous');
            }
        },
        {
            key: "scrollHeight",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollSize = _NativeDOM.default.getScrollSize(node);
                    return scrollSize[1];
                }
                return 0;
            }
        },
        {
            key: "scrollLeft",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollPosition = _NativeDOM.default.getScrollPosition(node);
                    return scrollPosition[0];
                }
                return 0;
            }
        },
        {
            key: "scrollTop",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollPosition = _NativeDOM.default.getScrollPosition(node);
                    return scrollPosition[1];
                }
                return 0;
            }
        },
        {
            key: "scrollWidth",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    var scrollSize = _NativeDOM.default.getScrollSize(node);
                    return scrollSize[0];
                }
                return 0;
            }
        },
        {
            key: "tagName",
            get: function() {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    return _NativeDOM.default.getTagName(node);
                }
                return '';
            }
        },
        {
            key: "textContent",
            get: function() {
                var shadowNode = (0, _ReadOnlyNode.getShadowNode)(this);
                if (shadowNode != null) {
                    return _NativeDOM.default.getTextContent(shadowNode);
                }
                return '';
            }
        },
        {
            key: "getBoundingClientRect",
            value: function getBoundingClientRect1() {
                return getBoundingClientRect(this, {
                    includeTransform: true
                });
            }
        },
        {
            /**
   * Pointer Capture APIs
   */ key: "hasPointerCapture",
            value: function hasPointerCapture(pointerId) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    return _NativeDOM.default.hasPointerCapture(node, pointerId);
                }
                return false;
            }
        },
        {
            key: "setPointerCapture",
            value: function setPointerCapture(pointerId) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    _NativeDOM.default.setPointerCapture(node, pointerId);
                }
            }
        },
        {
            key: "releasePointerCapture",
            value: function releasePointerCapture(pointerId) {
                var node = (0, _ReadOnlyNode.getShadowNode)(this);
                if (node != null) {
                    _NativeDOM.default.releasePointerCapture(node, pointerId);
                }
            }
        }
    ]);
    return ReadOnlyElement;
}(_ReadOnlyNode.default);
function getChildElements(node) {
    // $FlowIssue[incompatible-call]
    return (0, _ReadOnlyNode.getChildNodes)(node).filter((childNode)=>childNode instanceof ReadOnlyElement);
}
function getBoundingClientRect(node, ref) {
    var includeTransform = ref.includeTransform;
    var shadowNode = (0, _ReadOnlyNode.getShadowNode)(node);
    if (shadowNode != null) {
        var rect = _NativeDOM.default.getBoundingClientRect(shadowNode, includeTransform);
        return new _DOMRect.default(rect[0], rect[1], rect[2], rect[3]);
    }
    // Empty rect if any of the above failed
    return new _DOMRect.default(0, 0, 0, 0);
}


}),
"./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js": 
/*!*********************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js ***!
  \*********************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get default () {
        return ReadOnlyNode;
    },
    get getChildNodes () {
        return getChildNodes;
    },
    get getInstanceHandle () {
        return getInstanceHandle;
    },
    get getPublicInstanceFromInternalInstanceHandle () {
        return getPublicInstanceFromInternalInstanceHandle;
    },
    get getShadowNode () {
        return getShadowNode;
    },
    get setInstanceHandle () {
        return setInstanceHandle;
    }
});
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
var _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ "./node_modules/@swc/helpers/cjs/_interop_require_default.cjs");
var _sliced_to_array = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ "./node_modules/@swc/helpers/cjs/_sliced_to_array.cjs");
var _NodeList = __webpack_require__(/*! ../oldstylecollections/NodeList */ "./node_modules/react-native/src/private/webapis/dom/oldstylecollections/NodeList.js");
var _NativeDOM = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! ./specs/NativeDOM */ "./node_modules/react-native/src/private/webapis/dom/nodes/specs/NativeDOM.js"));
// We initialize this lazily to avoid a require cycle
// (`ReadOnlyElement` also depends on `ReadOnlyNode`).
var ReadOnlyElementClass;
var ReadOnlyNode = /*#__PURE__*/ function() {
    "use strict";
    function ReadOnlyNode(internalInstanceHandle) {
        _class_call_check._(this, ReadOnlyNode);
        // This constructor is inlined in `ReactNativeElement` so if you modify
        // this make sure that their implementation stays in sync.
        setInstanceHandle(this, internalInstanceHandle);
    }
    _create_class._(ReadOnlyNode, [
        {
            key: "childNodes",
            get: function() {
                var childNodes = getChildNodes(this);
                return (0, _NodeList.createNodeList)(childNodes);
            }
        },
        {
            key: "firstChild",
            get: function() {
                var childNodes = getChildNodes(this);
                if (childNodes.length === 0) {
                    return null;
                }
                return childNodes[0];
            }
        },
        {
            key: "isConnected",
            get: function() {
                var shadowNode = getShadowNode(this);
                if (shadowNode == null) {
                    return false;
                }
                return _NativeDOM.default.isConnected(shadowNode);
            }
        },
        {
            key: "lastChild",
            get: function() {
                var childNodes = getChildNodes(this);
                if (childNodes.length === 0) {
                    return null;
                }
                return childNodes[childNodes.length - 1];
            }
        },
        {
            key: "nextSibling",
            get: function() {
                var _getNodeSiblingsAndPosition = _sliced_to_array._(getNodeSiblingsAndPosition(this), 2), siblings = _getNodeSiblingsAndPosition[0], position = _getNodeSiblingsAndPosition[1];
                if (position === siblings.length - 1) {
                    // this node is the last child of its parent, so there is no next sibling.
                    return null;
                }
                return siblings[position + 1];
            }
        },
        {
            key: "nodeName",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "nodeType",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "nodeValue",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "parentElement",
            get: function() {
                var parentNode = this.parentNode;
                if (ReadOnlyElementClass == null) {
                    // We initialize this lazily to avoid a require cycle.
                    ReadOnlyElementClass = (__webpack_require__(/*! ./ReadOnlyElement */ "./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js")/* ["default"] */["default"]);
                }
                if (parentNode instanceof ReadOnlyElementClass) {
                    return parentNode;
                }
                return null;
            }
        },
        {
            key: "parentNode",
            get: function() {
                var shadowNode = getShadowNode(this);
                if (shadowNode == null) {
                    return null;
                }
                var parentInstanceHandle = _NativeDOM.default.getParentNode(shadowNode);
                if (parentInstanceHandle == null) {
                    return null;
                }
                return getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle) ?? null;
            }
        },
        {
            key: "previousSibling",
            get: function() {
                var _getNodeSiblingsAndPosition = _sliced_to_array._(getNodeSiblingsAndPosition(this), 2), siblings = _getNodeSiblingsAndPosition[0], position = _getNodeSiblingsAndPosition[1];
                if (position === 0) {
                    // this node is the first child of its parent, so there is no previous sibling.
                    return null;
                }
                return siblings[position - 1];
            }
        },
        {
            key: "textContent",
            get: /**
   * @abstract
   */ function() {
                throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');
            }
        },
        {
            key: "compareDocumentPosition",
            value: function compareDocumentPosition(otherNode) {
                // Quick check to avoid having to call into Fabric if the nodes are the same.
                if (otherNode === this) {
                    return 0;
                }
                var shadowNode = getShadowNode(this);
                var otherShadowNode = getShadowNode(otherNode);
                if (shadowNode == null || otherShadowNode == null) {
                    return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;
                }
                return _NativeDOM.default.compareDocumentPosition(shadowNode, otherShadowNode);
            }
        },
        {
            key: "contains",
            value: function contains(otherNode) {
                if (otherNode === this) {
                    return true;
                }
                var position = this.compareDocumentPosition(otherNode);
                // eslint-disable-next-line no-bitwise
                return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;
            }
        },
        {
            key: "getRootNode",
            value: function getRootNode() {
                // eslint-disable-next-line consistent-this
                var lastKnownParent = this;
                var nextPossibleParent = this.parentNode;
                while(nextPossibleParent != null){
                    lastKnownParent = nextPossibleParent;
                    nextPossibleParent = nextPossibleParent.parentNode;
                }
                return lastKnownParent;
            }
        },
        {
            key: "hasChildNodes",
            value: function hasChildNodes() {
                return getChildNodes(this).length > 0;
            }
        }
    ]);
    return ReadOnlyNode;
}();
/*
   * Node types, as returned by the `nodeType` property.
   */ /**
   * Type of Element, HTMLElement and ReactNativeElement instances.
   */ ReadOnlyNode.ELEMENT_NODE = 1;
/**
   * Currently Unused in React Native.
   */ ReadOnlyNode.ATTRIBUTE_NODE = 2;
/**
   * Text nodes.
   */ ReadOnlyNode.TEXT_NODE = 3;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.CDATA_SECTION_NODE = 4;
/**
   * @deprecated
   */ ReadOnlyNode.ENTITY_REFERENCE_NODE = 5;
/**
   * @deprecated
   */ ReadOnlyNode.ENTITY_NODE = 6;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.COMMENT_NODE = 8;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_NODE = 9;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_TYPE_NODE = 10;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;
/**
   * @deprecated
   */ ReadOnlyNode.NOTATION_NODE = 12;
/*
   * Document position flags. Used to check the return value of
   * `compareDocumentPosition()`.
   */ /**
   * Both nodes are in different documents.
   */ ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;
/**
   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both
   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)
   * or (if they are disconnected) in an arbitrary but consistent ordering.
   */ ReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;
/**
   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both
   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)
   * or (if they are disconnected) in an arbitrary but consistent ordering.
   */ ReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;
/**
   * `otherNode` is an ancestor of the node.
   */ ReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;
/**
   * `otherNode` is a descendant of the node.
   */ ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;
/**
   * @deprecated Unused in React Native.
   */ ReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;
var INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');
function getInstanceHandle(node) {
    // $FlowExpectedError[prop-missing]
    return node[INSTANCE_HANDLE_KEY];
}
function setInstanceHandle(node, instanceHandle) {
    // $FlowExpectedError[prop-missing]
    node[INSTANCE_HANDLE_KEY] = instanceHandle;
}
var RendererProxy;
function getRendererProxy() {
    if (RendererProxy == null) {
        // Lazy import Fabric here to avoid DOM Node APIs classes from having side-effects.
        // With a static import we can't use these classes for Paper-only variants.
        RendererProxy = __webpack_require__(/*! ../../../../../Libraries/ReactNative/RendererProxy */ "./node_modules/react-native/Libraries/ReactNative/RendererProxy.js");
    }
    return RendererProxy;
}
function getShadowNode(node) {
    return getRendererProxy().getNodeFromInternalInstanceHandle(getInstanceHandle(node));
}
function getChildNodes(node) {
    var shadowNode = getShadowNode(node);
    if (shadowNode == null) {
        return [];
    }
    var childNodeInstanceHandles = _NativeDOM.default.getChildNodes(shadowNode);
    return childNodeInstanceHandles.map((instanceHandle)=>getPublicInstanceFromInternalInstanceHandle(instanceHandle)).filter(Boolean);
}
function getNodeSiblingsAndPosition(node) {
    var parent = node.parentNode;
    if (parent == null) {
        // This node is the root or it's disconnected.
        return [
            [
                node
            ],
            0
        ];
    }
    var siblings = getChildNodes(parent);
    var position = siblings.indexOf(node);
    if (position === -1) {
        throw new TypeError("Missing node in parent's child node list");
    }
    return [
        siblings,
        position
    ];
}
function getPublicInstanceFromInternalInstanceHandle(instanceHandle) {
    var mixedPublicInstance = getRendererProxy().getPublicInstanceFromInternalInstanceHandle(instanceHandle);
    // $FlowExpectedError[incompatible-return] React defines public instances as "mixed" because it can't access the definition from React Native.
    return mixedPublicInstance;
}


}),
"./node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js": 
/*!****************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js ***!
  \****************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict-local
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "getElementSibling", ({
    enumerable: true,
    get: function() {
        return getElementSibling;
    }
}));
var _ReadOnlyNode = __webpack_require__(/*! ../ReadOnlyNode */ "./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyNode.js");
// We initialize this lazily to avoid a require cycle
// (`ReadOnlyElement` also depends on `Traversal`).
var ReadOnlyElementClass;
function getElementSibling(node, direction) {
    var parent = node.parentNode;
    if (parent == null) {
        // This node is the root or it's disconnected.
        return null;
    }
    var childNodes = (0, _ReadOnlyNode.getChildNodes)(parent);
    var startPosition = childNodes.indexOf(node);
    if (startPosition === -1) {
        return null;
    }
    var increment = direction === 'next' ? 1 : -1;
    var position = startPosition + increment;
    if (ReadOnlyElementClass == null) {
        // We initialize this lazily to avoid a require cycle.
        ReadOnlyElementClass = (__webpack_require__(/*! ../ReadOnlyElement */ "./node_modules/react-native/src/private/webapis/dom/nodes/ReadOnlyElement.js")/* ["default"] */["default"]);
    }
    while(childNodes[position] != null && !(childNodes[position] instanceof ReadOnlyElementClass)){
        position = position + increment;
    }
    return childNodes[position] ?? null;
}


}),
"./node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js": 
/*!*************************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js ***!
  \*************************************************************************************************/
(function (__unused_webpack_module, exports) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ /**
 * This definition is different from the current built-in type `$ArrayLike`
 * provided by Flow, in that this is an interface and that one is an object.
 *
 * The difference is important because, when using objects, Flow thinks
 * a `length` property would be copied over when using the spread operator,
 * which is incorrect.
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createEntriesIterator () {
        return createEntriesIterator;
    },
    get createKeyIterator () {
        return createKeyIterator;
    },
    get createValueIterator () {
        return createValueIterator;
    }
});
function* createValueIterator(arrayLike) {
    for(var i = 0; i < arrayLike.length; i++){
        yield arrayLike[i];
    }
}
function* createKeyIterator(arrayLike) {
    for(var i = 0; i < arrayLike.length; i++){
        yield i;
    }
}
function* createEntriesIterator(arrayLike) {
    for(var i = 0; i < arrayLike.length; i++){
        yield [
            i,
            arrayLike[i]
        ];
    }
}


}),
"./node_modules/react-native/src/private/webapis/dom/oldstylecollections/HTMLCollection.js": 
/*!*************************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/oldstylecollections/HTMLCollection.js ***!
  \*************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createHTMLCollection () {
        return createHTMLCollection;
    },
    get default () {
        return HTMLCollection;
    }
});
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _class_private_field_loose_base = __webpack_require__(/*! @swc/helpers/_/_class_private_field_loose_base */ "./node_modules/@swc/helpers/cjs/_class_private_field_loose_base.cjs");
var _class_private_field_loose_key = __webpack_require__(/*! @swc/helpers/_/_class_private_field_loose_key */ "./node_modules/@swc/helpers/cjs/_class_private_field_loose_key.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
var _ArrayLikeUtils = __webpack_require__(/*! ./ArrayLikeUtils */ "./node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js");
var _length = /*#__PURE__*/ _class_private_field_loose_key._("_length");
var HTMLCollection = /*#__PURE__*/ function() {
    "use strict";
    function HTMLCollection(elements) {
        _class_call_check._(this, HTMLCollection);
        Object.defineProperty(this, _length, {
            writable: true,
            value: void 0
        });
        for(var i = 0; i < elements.length; i++){
            Object.defineProperty(this, i, {
                value: elements[i],
                enumerable: true,
                configurable: false,
                writable: false
            });
        }
        _class_private_field_loose_base._(this, _length)[_length] = elements.length;
    }
    _create_class._(HTMLCollection, [
        {
            key: "length",
            get: function() {
                return _class_private_field_loose_base._(this, _length)[_length];
            }
        },
        {
            key: "item",
            value: function item(index) {
                if (index < 0 || index >= _class_private_field_loose_base._(this, _length)[_length]) {
                    return null;
                }
                // assigning to the interface allows us to access the indexer property in a
                // type-safe way.
                // eslint-disable-next-line consistent-this
                var arrayLike = this;
                return arrayLike[index];
            }
        },
        {
            /**
   * @deprecated Unused in React Native.
   */ key: "namedItem",
            value: function namedItem(name) {
                return null;
            }
        },
        {
            // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
            key: Symbol.iterator,
            value: function() {
                return (0, _ArrayLikeUtils.createValueIterator)(this);
            }
        }
    ]);
    return HTMLCollection;
}();
function createHTMLCollection(elements) {
    return new HTMLCollection(elements);
}


}),
"./node_modules/react-native/src/private/webapis/dom/oldstylecollections/NodeList.js": 
/*!*******************************************************************************************!*\
  !*** ./node_modules/react-native/src/private/webapis/dom/oldstylecollections/NodeList.js ***!
  \*******************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *       strict
 */ // flowlint unsafe-getters-setters:off
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: Object.getOwnPropertyDescriptor(all, name).get
    });
}
_export(exports, {
    get createNodeList () {
        return createNodeList;
    },
    get default () {
        return NodeList;
    }
});
var _class_call_check = __webpack_require__(/*! @swc/helpers/_/_class_call_check */ "./node_modules/@swc/helpers/cjs/_class_call_check.cjs");
var _class_private_field_loose_base = __webpack_require__(/*! @swc/helpers/_/_class_private_field_loose_base */ "./node_modules/@swc/helpers/cjs/_class_private_field_loose_base.cjs");
var _class_private_field_loose_key = __webpack_require__(/*! @swc/helpers/_/_class_private_field_loose_key */ "./node_modules/@swc/helpers/cjs/_class_private_field_loose_key.cjs");
var _create_class = __webpack_require__(/*! @swc/helpers/_/_create_class */ "./node_modules/@swc/helpers/cjs/_create_class.cjs");
var _ArrayLikeUtils = __webpack_require__(/*! ./ArrayLikeUtils */ "./node_modules/react-native/src/private/webapis/dom/oldstylecollections/ArrayLikeUtils.js");
var _length = /*#__PURE__*/ _class_private_field_loose_key._("_length");
var NodeList = /*#__PURE__*/ function() {
    "use strict";
    function NodeList(elements) {
        _class_call_check._(this, NodeList);
        Object.defineProperty(this, _length, {
            writable: true,
            value: void 0
        });
        for(var i = 0; i < elements.length; i++){
            Object.defineProperty(this, i, {
                value: elements[i],
                writable: false
            });
        }
        _class_private_field_loose_base._(this, _length)[_length] = elements.length;
    }
    _create_class._(NodeList, [
        {
            key: "length",
            get: function() {
                return _class_private_field_loose_base._(this, _length)[_length];
            }
        },
        {
            key: "item",
            value: function item(index) {
                if (index < 0 || index >= _class_private_field_loose_base._(this, _length)[_length]) {
                    return null;
                }
                // assigning to the interface allows us to access the indexer property in a
                // type-safe way.
                // eslint-disable-next-line consistent-this
                var arrayLike = this;
                return arrayLike[index];
            }
        },
        {
            key: "entries",
            value: function entries() {
                return (0, _ArrayLikeUtils.createEntriesIterator)(this);
            }
        },
        {
            key: "forEach",
            value: function forEach(callbackFn, thisArg) {
                // assigning to the interface allows us to access the indexer property in a
                // type-safe way.
                // eslint-disable-next-line consistent-this
                var arrayLike = this;
                for(var index = 0; index < _class_private_field_loose_base._(this, _length)[_length]; index++){
                    if (thisArg == null) {
                        callbackFn(arrayLike[index], index, this);
                    } else {
                        callbackFn.call(thisArg, arrayLike[index], index, this);
                    }
                }
            }
        },
        {
            key: "keys",
            value: function keys() {
                return (0, _ArrayLikeUtils.createKeyIterator)(this);
            }
        },
        {
            key: "values",
            value: function values() {
                return (0, _ArrayLikeUtils.createValueIterator)(this);
            }
        },
        {
            // $FlowIssue[unsupported-syntax] Flow does not support computed properties in classes.
            key: Symbol.iterator,
            value: function() {
                return (0, _ArrayLikeUtils.createValueIterator)(this);
            }
        }
    ]);
    return NodeList;
}();
function createNodeList(elements) {
    return new NodeList(elements);
}


}),

}]);//# sourceMappingURL=vendors-node_modules_react-native_src_private_webapis_dom_nodes_ReactNativeElement_js.chunk.bundle.map?platform=android